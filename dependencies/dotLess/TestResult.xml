<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="C:\TeamCity\buildAgent\work\98a2ee4b5ed5cbd1\build\\dotless.Test.dll" total="260" errors="0" failures="0" not-run="14" inconclusive="0" ignored="14" skipped="0" invalid="0" date="2010-07-04" time="16:10:02">
  <environment nunit-version="2.5.2.9222" clr-version="2.0.50727.3053" os-version="Microsoft Windows NT 5.2.3790 Service Pack 2" platform="Win32NT" cwd="C:\TeamCity\buildAgent\work\98a2ee4b5ed5cbd1\build" machine-name="S15360014" user="SYSTEM" user-domain="WORKGROUP" />
  <culture-info current-culture="en-GB" current-uiculture="en-US" />
  <test-suite name="C:\TeamCity\buildAgent\work\98a2ee4b5ed5cbd1\build\\dotless.Test.dll" executed="True" success="True" time="4.172" asserts="0">
    <results>
      <test-suite name="dotless" executed="True" success="True" time="4.109" asserts="0">
        <results>
          <test-suite name="Test" executed="True" success="True" time="4.109" asserts="0">
            <results>
              <test-suite name="Config" executed="True" success="True" time="1.422" asserts="0">
                <results>
                  <test-suite name="ConfigurationFixture" executed="True" success="True" time="1.422" asserts="0">
                    <results>
                      <test-case name="dotless.Test.Config.ConfigurationFixture.CachedCssResponseInstanceIsTransient" executed="True" success="True" time="1.328" asserts="2" />
                      <test-case name="dotless.Test.Config.ConfigurationFixture.CachingIsEnabledByDefault" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="dotless.Test.Config.ConfigurationFixture.CanOverrideLogLevel" executed="True" success="True" time="0.016" asserts="2" />
                      <test-case name="dotless.Test.Config.ConfigurationFixture.CanOverrideOptimization" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Config.ConfigurationFixture.CanPassCustomLessSource" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Config.ConfigurationFixture.CanPassCustomLogger" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Config.ConfigurationFixture.CssResponseInstanceIsTransient" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="dotless.Test.Config.ConfigurationFixture.DefaultEngineIsParameterDecorator" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Config.ConfigurationFixture.HandlerImplInstanceIsTransient" executed="True" success="True" time="0.016" asserts="4" />
                      <test-case name="dotless.Test.Config.ConfigurationFixture.HttpInstanceIsTransient" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Config.ConfigurationFixture.IfCacheOptionSetCacheIsInMemoryCache" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Config.ConfigurationFixture.IfMinifyOptionSetEngineIsLessEngine" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Config.ConfigurationFixture.IfWebAndCacheOptionsSetCacheIsHttpCache" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Config.ConfigurationFixture.IfWebAndCacheOptionsSetEngineIsCacheDecorator" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="dotless.Test.Config.ConfigurationFixture.IfWebCacheAndMinifyOptionsSetEngineIsCacheDecoratorThenLessEngine" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="dotless.Test.Config.ConfigurationFixture.IfWebOptionSetButCachedIsFalseEngineIsLessEngine" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Specs" executed="True" success="True" time="1.266" asserts="0">
                <results>
                  <test-suite name="AccessorsFixture" executed="True" success="False" time="0.000" asserts="0">
                    <results>
                      <test-case name="dotless.Test.Specs.AccessorsFixture.Accessors" executed="False">
                        <reason>
                          <message><![CDATA[Unsupported]]></message>
                        </reason>
                      </test-case>
                    </results>
                  </test-suite>
                  <test-suite name="ColorsFixture" executed="True" success="True" time="0.422" asserts="0">
                    <results>
                      <test-case name="dotless.Test.Specs.ColorsFixture.Colors" executed="True" success="True" time="0.406" asserts="6" />
                      <test-case name="dotless.Test.Specs.ColorsFixture.Gray" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="dotless.Test.Specs.ColorsFixture.Overflow" executed="True" success="True" time="0.016" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="CommentsFixture" executed="True" success="True" time="0.031" asserts="0">
                    <results>
                      <test-case name="dotless.Test.Specs.CommentsFixture.BlockCommentAfterProperty" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="dotless.Test.Specs.CommentsFixture.BlockCommentAfterSelector" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.CommentsFixture.BlockCommentBeforeProperty" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.CommentsFixture.BlockCommented1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.CommentsFixture.BlockCommented2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.CommentsFixture.BlockCommented3" executed="False">
                        <reason>
                          <message><![CDATA[Bug]]></message>
                        </reason>
                      </test-case>
                      <test-case name="dotless.Test.Specs.CommentsFixture.ColorInsideComments" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.CommentsFixture.CommentHeader" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.CommentsFixture.CommentInsideAComment" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.CommentsFixture.CommentOnLastLine" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.CommentsFixture.EmptyComment" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.CommentsFixture.LineCommentAfterALineComment" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.CommentsFixture.LineCommentAfterBlock" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.CommentsFixture.LineCommentAfterProperty" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.CommentsFixture.LineCommentGetsRemoved" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.CommentsFixture.MultilineComment" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.CommentsFixture.MultilineComment2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.CommentsFixture.VariablesInsideComments" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="Compression" executed="True" success="True" time="0.109" asserts="0">
                    <results>
                      <test-suite name="ColorsFixture" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Specs.Compression.ColorsFixture.Colors" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="dotless.Test.Specs.Compression.ColorsFixture.Gray" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="dotless.Test.Specs.Compression.ColorsFixture.Overflow" executed="True" success="True" time="0.000" asserts="5" />
                        </results>
                      </test-suite>
                      <test-suite name="CommentsFixture" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Specs.Compression.CommentsFixture.LineCommentGetsRemoved" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="ImportFixture" executed="True" success="True" time="0.062" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Specs.Compression.ImportFixture.Imports" executed="True" success="True" time="0.062" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="SelectorsFixture" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Specs.Compression.SelectorsFixture.DecendantSelectorWithTabs" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="dotless.Test.Specs.Compression.SelectorsFixture.IdSelectors" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="dotless.Test.Specs.Compression.SelectorsFixture.MultipleTags" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="dotless.Test.Specs.Compression.SelectorsFixture.ParentSelector1" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="dotless.Test.Specs.Compression.SelectorsFixture.Tag" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="dotless.Test.Specs.Compression.SelectorsFixture.TwoTags" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="WhitespaceFixture" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Specs.Compression.WhitespaceFixture.Empty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="dotless.Test.Specs.Compression.WhitespaceFixture.NewLines" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="dotless.Test.Specs.Compression.WhitespaceFixture.NoSemiColon1" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="dotless.Test.Specs.Compression.WhitespaceFixture.NoSemiColon2" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="dotless.Test.Specs.Compression.WhitespaceFixture.NoSemiColon3" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="dotless.Test.Specs.Compression.WhitespaceFixture.Whitespace" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="dotless.Test.Specs.Compression.WhitespaceFixture.Whitespace2" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Css3Fixture" executed="True" success="True" time="0.031" asserts="0">
                    <results>
                      <test-case name="dotless.Test.Specs.Css3Fixture.AfterPseudoElement" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.Css3Fixture.AttributeBeginsWith" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.Css3Fixture.AttributeEndsWith" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.Css3Fixture.BeforePseudoElement" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.Css3Fixture.CommaDelimited" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.Css3Fixture.FontFaceDirective" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.Css3Fixture.MediaDirective" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.Css3Fixture.MediaDirectiveCanDeclareVariables" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.Css3Fixture.MediaDirectiveCanUseVariables" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.Css3Fixture.MozTransform" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.Css3Fixture.MultipleAttributeSelectors1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.Css3Fixture.MultipleAttributeSelectors2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.Css3Fixture.MultipleBackgroundProperty" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.Css3Fixture.NotPseudoClass" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.Css3Fixture.NthChildExpressions" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.Css3Fixture.SiblingSelector" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="CssFixture" executed="True" success="True" time="0.031" asserts="0">
                    <results>
                      <test-case name="dotless.Test.Specs.CssFixture.AttributeEquals" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.CssFixture.AttributeExists" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.CssFixture.CharsetDirective" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.CssFixture.ChildSelector" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.CssFixture.ClassAndIdSelectors" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.CssFixture.Directives" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.CssFixture.FirstChildPseudoClass" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.CssFixture.GlobalSelector" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.CssFixture.Important" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.CssFixture.LangPseudoClass" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.CssFixture.Misc" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.CssFixture.NextSiblingSelector" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.CssFixture.PropertyWithNumbers" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.CssFixture.PropertyWithUnderscore" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.CssFixture.PseudoClass" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.CssFixture.Shorthands" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.CssFixture.TagSelector" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="Functions" executed="True" success="True" time="0.469" asserts="0">
                    <results>
                      <test-suite name="AbsFixture" executed="True" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Specs.Functions.AbsFixture.Abs" executed="True" success="True" time="0.016" asserts="4" />
                          <test-case name="dotless.Test.Specs.Functions.AbsFixture.ThrowsIfIncorrectType" executed="True" success="True" time="0.016" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="AlphaFixture" executed="True" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Specs.Functions.AlphaFixture.TestAlpha" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="dotless.Test.Specs.Functions.AlphaFixture.TestAlphaOpacityHack" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="dotless.Test.Specs.Functions.AlphaFixture.TestAlphaOpacityHackWithVariable" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="dotless.Test.Specs.Functions.AlphaFixture.TestAlphaTestsTypes" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="dotless.Test.Specs.Functions.AlphaFixture.TestEditAlpha" executed="True" success="True" time="0.016" asserts="12" />
                          <test-case name="dotless.Test.Specs.Functions.AlphaFixture.TestEditAlphaPercent" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="dotless.Test.Specs.Functions.AlphaFixture.TestEditAlphaTestsTypes" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="BlueFixture" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Specs.Functions.BlueFixture.TestBlue" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="dotless.Test.Specs.Functions.BlueFixture.TestBlueException" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="dotless.Test.Specs.Functions.BlueFixture.TestEditBlue" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="dotless.Test.Specs.Functions.BlueFixture.TestEditBlueTestsTypes" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="CielFixture" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Specs.Functions.CielFixture.TestCeil" executed="True" success="True" time="0.016" asserts="6" />
                        </results>
                      </test-suite>
                      <test-suite name="ComplementFixture" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Specs.Functions.ComplementFixture.TestComplement" executed="True" success="True" time="0.016" asserts="5" />
                          <test-case name="dotless.Test.Specs.Functions.ComplementFixture.TestComplementTestsTypes" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="FloorFixture" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Specs.Functions.FloorFixture.TestFloor" executed="True" success="True" time="0.016" asserts="5" />
                        </results>
                      </test-suite>
                      <test-suite name="FormatStringFixture" executed="True" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Specs.Functions.FormatStringFixture.EscapesQuotes" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="dotless.Test.Specs.Functions.FormatStringFixture.FormatGradients" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="dotless.Test.Specs.Functions.FormatStringFixture.FormattingWithVariables" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="dotless.Test.Specs.Functions.FormatStringFixture.NoFormatting" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="dotless.Test.Specs.Functions.FormatStringFixture.SimpleFormatting" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="dotless.Test.Specs.Functions.FormatStringFixture.SubsequentArgumentssIgnored" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="GrayscaleFixture" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Specs.Functions.GrayscaleFixture.TestGrayscale" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="dotless.Test.Specs.Functions.GrayscaleFixture.TestGrayscaleTestsTypes" executed="True" success="True" time="0.016" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="GreenFixture" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Specs.Functions.GreenFixture.TestEditGreen" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="dotless.Test.Specs.Functions.GreenFixture.TestEditGreenTestsTypes" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="dotless.Test.Specs.Functions.GreenFixture.TestGreen" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="dotless.Test.Specs.Functions.GreenFixture.TestGreenException" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="HslaFixture" executed="True" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Specs.Functions.HslaFixture.TestHsla" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="dotless.Test.Specs.Functions.HslaFixture.TestHslaChecksTypes" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="dotless.Test.Specs.Functions.HslaFixture.TestHslaOverflows" executed="True" success="True" time="0.016" asserts="8" />
                        </results>
                      </test-suite>
                      <test-suite name="HslFixture" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Specs.Functions.HslFixture.TestHsl" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="dotless.Test.Specs.Functions.HslFixture.TestHslChecksTypes" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="dotless.Test.Specs.Functions.HslFixture.TestHslOverflows" executed="True" success="True" time="0.000" asserts="6" />
                        </results>
                      </test-suite>
                      <test-suite name="HueFixture" executed="True" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Specs.Functions.HueFixture.TestEditHue" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="dotless.Test.Specs.Functions.HueFixture.TestEditHueTestsTypes" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="dotless.Test.Specs.Functions.HueFixture.TestHue" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="dotless.Test.Specs.Functions.HueFixture.TestHueException" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="LightnessFixture" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Specs.Functions.LightnessFixture.TestEditLightness" executed="True" success="True" time="0.016" asserts="12" />
                          <test-case name="dotless.Test.Specs.Functions.LightnessFixture.TestEditLightnessOverflow" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="dotless.Test.Specs.Functions.LightnessFixture.TestEditLightnessTestsTypes" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="dotless.Test.Specs.Functions.LightnessFixture.TestLightness" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="dotless.Test.Specs.Functions.LightnessFixture.TestLightnessException" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="MixFixture" executed="True" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Specs.Functions.MixFixture.TestMix" executed="True" success="True" time="0.016" asserts="13" />
                          <test-case name="dotless.Test.Specs.Functions.MixFixture.TestMixTestsBounds" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="dotless.Test.Specs.Functions.MixFixture.TestMixTestsTypes" executed="True" success="True" time="0.016" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="PercentageFixture" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Specs.Functions.PercentageFixture.TestPercentage" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="dotless.Test.Specs.Functions.PercentageFixture.TestPercentageChecksTypes" executed="True" success="True" time="0.016" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="RedFixture" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Specs.Functions.RedFixture.TestEditRed" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="dotless.Test.Specs.Functions.RedFixture.TestEditRedTestsTypes" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="dotless.Test.Specs.Functions.RedFixture.TestRed" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="dotless.Test.Specs.Functions.RedFixture.TestRedException" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="RgbaFixture" executed="True" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Specs.Functions.RgbaFixture.TestRgba" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="dotless.Test.Specs.Functions.RgbaFixture.TestRgbaOverflows" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="dotless.Test.Specs.Functions.RgbaFixture.TestRgbaTestsNumArgs" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="dotless.Test.Specs.Functions.RgbaFixture.TestRgbaTestsTypes" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="dotless.Test.Specs.Functions.RgbaFixture.TestRgbaWithColor" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="dotless.Test.Specs.Functions.RgbaFixture.TestRgbaWithColorTestsTypes" executed="True" success="True" time="0.016" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="RgbFixture" executed="True" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Specs.Functions.RgbFixture.TestRgb" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="dotless.Test.Specs.Functions.RgbFixture.TestRgbOverflows" executed="True" success="True" time="0.016" asserts="5" />
                          <test-case name="dotless.Test.Specs.Functions.RgbFixture.TestRgbPercent" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="dotless.Test.Specs.Functions.RgbFixture.TestRgbTestPercentBounds" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="dotless.Test.Specs.Functions.RgbFixture.TestRgbTestsTypes" executed="True" success="True" time="0.016" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="RoundFixture" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Specs.Functions.RoundFixture.RoundsMidpointAwayFromZero" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="dotless.Test.Specs.Functions.RoundFixture.TestRound" executed="True" success="True" time="0.000" asserts="6" />
                        </results>
                      </test-suite>
                      <test-suite name="SaturationFixture" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Specs.Functions.SaturationFixture.TestEditSaturation" executed="True" success="True" time="0.000" asserts="14" />
                          <test-case name="dotless.Test.Specs.Functions.SaturationFixture.TestEditSaturationOverflow" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="dotless.Test.Specs.Functions.SaturationFixture.TestEditSaturationTestsTypes" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="dotless.Test.Specs.Functions.SaturationFixture.TestSaturation" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="dotless.Test.Specs.Functions.SaturationFixture.TestSaturationException" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="ImportFixture" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="dotless.Test.Specs.ImportFixture.Imports" executed="True" success="True" time="0.016" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="MixinsArgsFixture" executed="True" success="True" time="0.031" asserts="0">
                    <results>
                      <test-case name="dotless.Test.Specs.MixinsArgsFixture.CanEvaluateCommaSepearatedExpressions" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="dotless.Test.Specs.MixinsArgsFixture.CanUseSameVaiableName" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.MixinsArgsFixture.CanUseVaiablesInsideMixins" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.MixinsArgsFixture.MixinsArgs" executed="True" success="True" time="0.016" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="MixinsFixture" executed="True" success="True" time="0.031" asserts="0">
                    <results>
                      <test-case name="dotless.Test.Specs.MixinsFixture.ArgumentsOverridesVariableInSameScope" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.MixinsFixture.CallSiteCorrectWhenMixinThrowsAnError" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.MixinsFixture.CanCallMixinFromWithinInnerRuleset" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.MixinsFixture.CanNestParameterizedMixins" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.MixinsFixture.CanNestParameterizedMixinsWithDefaults" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.MixinsFixture.CanNestParameterizedMixinsWithSameParameterNames" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.MixinsFixture.CanPassNamedArguments" executed="False">
                        <reason>
                          <message><![CDATA[Unsupported]]></message>
                        </reason>
                      </test-case>
                      <test-case name="dotless.Test.Specs.MixinsFixture.CanPassVariablesAsNamedArgs" executed="False">
                        <reason>
                          <message><![CDATA[Unsupported]]></message>
                        </reason>
                      </test-case>
                      <test-case name="dotless.Test.Specs.MixinsFixture.CanPassVariablesAsPositionalArgs" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.MixinsFixture.CanUseArgumentsWithSameNameAsVariable" executed="False">
                        <reason>
                          <message><![CDATA[Infinite Loop - breaks tester]]></message>
                        </reason>
                      </test-case>
                      <test-case name="dotless.Test.Specs.MixinsFixture.CanUseVariablesAsDefaultArgumentValues" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="dotless.Test.Specs.MixinsFixture.ChildSelector" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.MixinsFixture.CommaSeparatedMixins" executed="False">
                        <reason>
                          <message><![CDATA[Unsupported]]></message>
                        </reason>
                      </test-case>
                      <test-case name="dotless.Test.Specs.MixinsFixture.DontCacheFunctions" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.MixinsFixture.IncludesAllMatchedMixins1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.MixinsFixture.IncludesAllMatchedMixins2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.MixinsFixture.IncludesAllMatchedMixins3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.MixinsFixture.InnerMixinEvaluatedCorrectly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.MixinsFixture.InnerMixinsFindInnerVariables" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.MixinsFixture.MixedPositionalAndNamedArguments" executed="False">
                        <reason>
                          <message><![CDATA[Unsupported]]></message>
                        </reason>
                      </test-case>
                      <test-case name="dotless.Test.Specs.MixinsFixture.MixinNestedRules" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.MixinsFixture.Mixins" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.MixinsFixture.MixinsKeepImportantKeyword" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.MixinsFixture.MixinWithArgs" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="dotless.Test.Specs.MixinsFixture.MixinWithArgsInsideNamespace" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.MixinsFixture.MultipleMixins" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.MixinsFixture.NestedParameterizedMixins1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.MixinsFixture.NestedParameterizedMixins2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.MixinsFixture.NestedParameterizedMixins3" executed="False">
                        <reason>
                          <message><![CDATA[Unsupported]]></message>
                        </reason>
                      </test-case>
                      <test-case name="dotless.Test.Specs.MixinsFixture.NestedParameterizedMixins4" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.MixinsFixture.NestedParameterizedMixins5" executed="False">
                        <reason>
                          <message><![CDATA[Unsupported]]></message>
                        </reason>
                      </test-case>
                      <test-case name="dotless.Test.Specs.MixinsFixture.PositionalArgumentsMustAppearBeforeAllNamedArguments" executed="False">
                        <reason>
                          <message><![CDATA[Unsupported]]></message>
                        </reason>
                      </test-case>
                      <test-case name="dotless.Test.Specs.MixinsFixture.ShortMixinDoesntMatchLongerSelectors" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.MixinsFixture.ThrowsIfArumentNotFound" executed="False">
                        <reason>
                          <message><![CDATA[Unsupported]]></message>
                        </reason>
                      </test-case>
                      <test-case name="dotless.Test.Specs.MixinsFixture.ThrowsIfMixinNotFound" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.MixinsFixture.ThrowsIfNoMatchFound" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.MixinsFixture.ThrowsIfNotDefined" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.MixinsFixture.ThrowsIfTooManyArguments" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="OperationsFixture" executed="True" success="True" time="0.031" asserts="0">
                    <results>
                      <test-case name="dotless.Test.Specs.OperationsFixture.CanIncludeFunctionsInOperations" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="dotless.Test.Specs.OperationsFixture.CanUseColorKeywordsInOperations" executed="True" success="True" time="0.016" asserts="3" />
                      <test-case name="dotless.Test.Specs.OperationsFixture.Colours" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="dotless.Test.Specs.OperationsFixture.DivideNumberByColor" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.OperationsFixture.DivisionByZero" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="dotless.Test.Specs.OperationsFixture.Negative" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="dotless.Test.Specs.OperationsFixture.Operations" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="dotless.Test.Specs.OperationsFixture.OperationsAreLeftAssociative" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="dotless.Test.Specs.OperationsFixture.OperationsKeepImportantKeyword" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="dotless.Test.Specs.OperationsFixture.Rounding" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="dotless.Test.Specs.OperationsFixture.Shorthands" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.OperationsFixture.ThrowsIfLeftHandSideIsNotOperable" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="dotless.Test.Specs.OperationsFixture.ThrowsIfRightHandSideIsNotANumber" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.OperationsFixture.ThrowsIfUnableToConvertRightHandSideToColor" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.OperationsFixture.WithVariables" executed="True" success="True" time="0.000" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="OptimizationsFixture" executed="True" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="dotless.Test.Specs.OptimizationsFixture.ErrorAfterCommentIsReportedOnCorrectLine" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="dotless.Test.Specs.OptimizationsFixture.Optimization0And1DontStripComments" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="dotless.Test.Specs.OptimizationsFixture.Optimization0LeavesBlankLinesInComments" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.OptimizationsFixture.Optimization1DoesNotRemoveWhitespaceLinesFromComments" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.OptimizationsFixture.Optimization2StripsComments" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="ParensFixture" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="dotless.Test.Specs.ParensFixture.MixedUnits" executed="True" success="True" time="0.016" asserts="2" />
                      <test-case name="dotless.Test.Specs.ParensFixture.MoreParens" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="dotless.Test.Specs.ParensFixture.NestedParens" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="dotless.Test.Specs.ParensFixture.Parens" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="dotless.Test.Specs.ParensFixture.UnitsOutsideParens" executed="False">
                        <reason>
                          <message><![CDATA[Unsupported]]></message>
                        </reason>
                      </test-case>
                    </results>
                  </test-suite>
                  <test-suite name="RulesetsFixture" executed="True" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="dotless.Test.Specs.RulesetsFixture.ImplicitParentSelectorPseudoClass" executed="False">
                        <reason>
                          <message><![CDATA[Unsupported]]></message>
                        </reason>
                      </test-case>
                      <test-case name="dotless.Test.Specs.RulesetsFixture.Rulesets" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="ScopeFixture" executed="True" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="dotless.Test.Specs.ScopeFixture.Scope" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="SelectorsFixture" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="dotless.Test.Specs.SelectorsFixture.DecendantSelectorWithTabs" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.SelectorsFixture.IdSelectors" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.SelectorsFixture.MultipleTags" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.SelectorsFixture.ParentSelector1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.SelectorsFixture.ParentSelector2" executed="False">
                        <reason>
                          <message><![CDATA[Unsupported]]></message>
                        </reason>
                      </test-case>
                      <test-case name="dotless.Test.Specs.SelectorsFixture.Tag" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="dotless.Test.Specs.SelectorsFixture.TwoTags" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="StringsFixture" executed="True" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="dotless.Test.Specs.StringsFixture.BracesInQuotes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.StringsFixture.CloseBraceInsideStringAfterQuoteInsideString" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.StringsFixture.Comments" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.StringsFixture.EscapingQuotes" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="dotless.Test.Specs.StringsFixture.SingleQuotes" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="dotless.Test.Specs.StringsFixture.Strings" executed="True" success="True" time="0.000" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="VariablesFixture" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="dotless.Test.Specs.VariablesFixture.LazyEval" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.VariablesFixture.Redefine" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.VariablesFixture.ThrowsIfNotFound" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.VariablesFixture.Variables" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="dotless.Test.Specs.VariablesFixture.VariablesKeepImportantKeyword" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="dotless.Test.Specs.VariablesFixture.VariablesKeepImportantKeyword2" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="WhitespaceFixture" executed="True" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="dotless.Test.Specs.WhitespaceFixture.Empty" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.WhitespaceFixture.NewLines" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.WhitespaceFixture.NoSemiColon1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.WhitespaceFixture.NoSemiColon2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.WhitespaceFixture.NoSemiColon3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.WhitespaceFixture.Whitespace" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="dotless.Test.Specs.WhitespaceFixture.Whitespace2" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Unit" executed="True" success="True" time="1.422" asserts="0">
                <results>
                  <test-suite name="Engine" executed="True" success="True" time="0.906" asserts="0">
                    <results>
                      <test-suite name="CacheDecoratorFixture" executed="True" success="True" time="0.875" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Unit.Engine.CacheDecoratorFixture.DependanciesContainsFileName" executed="True" success="True" time="0.781" asserts="0" />
                          <test-case name="dotless.Test.Unit.Engine.CacheDecoratorFixture.IncludesDependancyForAllImports" executed="True" success="True" time="0.031" asserts="0" />
                          <test-case name="dotless.Test.Unit.Engine.CacheDecoratorFixture.InsertsIfNotAlreadyCached" executed="True" success="True" time="0.016" asserts="0" />
                          <test-case name="dotless.Test.Unit.Engine.CacheDecoratorFixture.OneDependancyIfNoImports" executed="True" success="True" time="0.031" asserts="0" />
                          <test-case name="dotless.Test.Unit.Engine.CacheDecoratorFixture.RetrievesIfAlreadyCached" executed="True" success="True" time="0.016" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="ParameterDecoratorFixture" executed="True" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Unit.Engine.ParameterDecoratorFixture.PrependsParametersAsVariableDeclarationToInput" executed="True" success="True" time="0.016" asserts="0" />
                          <test-case name="dotless.Test.Unit.Engine.ParameterDecoratorFixture.PutsOneParameterPerLine" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Parameters" executed="True" success="True" time="0.453" asserts="0">
                    <results>
                      <test-suite name="ParameterSourceFixture" executed="True" success="True" time="0.453" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Unit.Parameters.ParameterSourceFixture.CanHandleMultipleEntries" executed="True" success="True" time="0.422" asserts="1" />
                          <test-case name="dotless.Test.Unit.Parameters.ParameterSourceFixture.CanHandleNullEntries" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="dotless.Test.Unit.Parameters.ParameterSourceFixture.GetsParametersFromQueryStringDictionary" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="dotless.Test.Unit.Parameters.ParameterSourceFixture.ReturnsEmptyDictionaryIfNoParametersArePassed" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Response" executed="True" success="True" time="0.047" asserts="0">
                    <results>
                      <test-suite name="CachedCssResponseFixture" executed="True" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Unit.Response.CachedCssResponseFixture.ContentTypeIsSetToTextCss" executed="True" success="True" time="0.031" asserts="0" />
                          <test-case name="dotless.Test.Unit.Response.CachedCssResponseFixture.ResponseEndIsCalled" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="CssResponceFixture" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="dotless.Test.Unit.Response.CssResponceFixture.ContentTypeIsTextCss" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="dotless.Test.Unit.Response.CssResponceFixture.CssIsWrittenToResponse" executed="True" success="True" time="0.016" asserts="0" />
                          <test-case name="dotless.Test.Unit.Response.CssResponceFixture.ResponseEndIsCalled" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="dotless.Test.Unit.Response.CssResponceFixture.SetsCachabilityPublic" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>